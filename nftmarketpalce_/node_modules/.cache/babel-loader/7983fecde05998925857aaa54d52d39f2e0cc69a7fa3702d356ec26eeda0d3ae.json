{"ast":null,"code":"var _jsxFileName = \"/Users/mehmetkelnebioglu/Desktop/nftmarketpalce_/src/Components/NFT/NFT.js\",\n  _s = $RefreshSig$();\nimport styles from \"./NFT.module.scss\";\nimport { parseAddress } from \"../../utils/parseAddress\";\nimport { useContractFunctions } from \"../../Hooks/useContractFunctions\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NFT = _ref => {\n  _s();\n  let {\n    type,\n    contractAddress,\n    tokenId,\n    price,\n    deadline,\n    id\n  } = _ref;\n  const {\n    startNFTSale\n  } = useContractFunctions();\n  const [fixedPriceInput, setFixedPriceInput] = useState();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.wrapper,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.image,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.addr,\n        children: [\"Contract: \", parseAddress(contractAddress)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.id,\n        children: [\" Token Id: \", tokenId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), type === \"bir\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.type1,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.inputPart,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: styles.input,\n          autoComplete: \"off\",\n          autoCorrect: \"off\",\n          type: \"text\",\n          inputMode: \"decimal\",\n          pattern: \"^[0-9]*[.,]?[0-9]*$\",\n          minLength: 1,\n          maxLength: 79,\n          spellCheck: \"false\",\n          placeholder: \"0.0\",\n          onChange: value => {\n            setFixedPriceInput(Number(value.target.value));\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.button,\n          onClick: () => {\n            startNFTSale(contractAddress, fixedPriceInput, tokenId);\n          },\n          children: \"Fixed Price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.inputPart,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: styles.input,\n          autoComplete: \"off\",\n          autoCorrect: \"off\",\n          type: \"text\",\n          inputMode: \"decimal\",\n          pattern: \"^[0-9]*[.,]?[0-9]*$\",\n          minLength: 1,\n          maxLength: 79,\n          spellCheck: \"false\",\n          placeholder: \"0.0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.button,\n          children: \"Auction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this) : type === \"iki\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.type2,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [price, \" Wei\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.button,\n        onClick: () => buyNFT(id, price),\n        children: \"Buy \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.type3,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"5 Ether\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.inputPart,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: styles.input,\n          autoComplete: \"off\",\n          autoCorrect: \"off\",\n          type: \"text\",\n          inputMode: \"decimal\",\n          pattern: \"^[0-9]*[.,]?[0-9]*$\",\n          minLength: 1,\n          maxLength: 79,\n          spellCheck: \"false\",\n          placeholder: \"0.0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.button,\n          children: \"Auction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n_s(NFT, \"WGZVX2m7x6o6iRysvwDc442nOhY=\", false, function () {\n  return [useContractFunctions];\n});\n_c = NFT;\nexport { NFT };\nvar _c;\n$RefreshReg$(_c, \"NFT\");","map":{"version":3,"names":["styles","parseAddress","useContractFunctions","useState","NFT","type","contractAddress","tokenId","price","deadline","id","startNFTSale","fixedPriceInput","setFixedPriceInput","wrapper","image","addr","type1","inputPart","input","value","Number","target","button","type2","buyNFT","type3"],"sources":["/Users/mehmetkelnebioglu/Desktop/nftmarketpalce_/src/Components/NFT/NFT.js"],"sourcesContent":["import styles from \"./NFT.module.scss\";\nimport { parseAddress } from \"../../utils/parseAddress\";\nimport { useContractFunctions } from \"../../Hooks/useContractFunctions\";\nimport { useState } from \"react\";\nconst NFT = ({ type, contractAddress, tokenId, price, deadline, id }) => {\n  const { startNFTSale } = useContractFunctions();\n  const [fixedPriceInput, setFixedPriceInput] = useState();\n  return (\n    <div className={styles.wrapper}>\n      <div className={styles.image}>\n        <div className={styles.addr}>\n          Contract: {parseAddress(contractAddress)}\n        </div>\n        <div className={styles.id}> Token Id: {tokenId}</div>\n      </div>\n      {type === \"bir\" ? (\n        <div className={styles.type1}>\n          <div className={styles.inputPart}>\n            <input\n              className={styles.input}\n              autoComplete=\"off\"\n              autoCorrect=\"off\"\n              type=\"text\"\n              inputMode=\"decimal\"\n              pattern=\"^[0-9]*[.,]?[0-9]*$\"\n              minLength={1}\n              maxLength={79}\n              spellCheck=\"false\"\n              placeholder={\"0.0\"}\n              onChange={(value) => {\n                setFixedPriceInput(Number(value.target.value));\n              }}\n            />\n            <button className={styles.button} onClick={()=>{startNFTSale(contractAddress,fixedPriceInput,tokenId)}}>Fixed Price</button>\n          </div>\n          <div className={styles.inputPart}>\n            <input\n              className={styles.input}\n              autoComplete=\"off\"\n              autoCorrect=\"off\"\n              type=\"text\"\n              inputMode=\"decimal\"\n              pattern=\"^[0-9]*[.,]?[0-9]*$\"\n              minLength={1}\n              maxLength={79}\n              spellCheck=\"false\"\n              placeholder={\"0.0\"}\n            />\n            <button className={styles.button}>Auction</button>\n          </div>\n        </div>\n      ) : type === \"iki\" ? (\n        <div className={styles.type2}>\n          <div>{price} Wei</div>\n          <button className={styles.button} onClick={() => buyNFT(id,price)}>Buy </button>\n        </div>\n      ) : (\n        <div className={styles.type3}>\n          <div>5 Ether</div>\n          <div className={styles.inputPart}>\n            <input\n              className={styles.input}\n              autoComplete=\"off\"\n              autoCorrect=\"off\"\n              type=\"text\"\n              inputMode=\"decimal\"\n              pattern=\"^[0-9]*[.,]?[0-9]*$\"\n              minLength={1}\n              maxLength={79}\n              spellCheck=\"false\"\n              placeholder={\"0.0\"}\n            />\n            <button className={styles.button}>Auction</button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport { NFT };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}