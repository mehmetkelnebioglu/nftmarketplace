{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  account: null,\n  contract: null,\n  provider: null,\n  accNFTs: null,\n  listedNFTs: []\n};\nexport const accountsSlice = createSlice({\n  name: \"accounts\",\n  initialState,\n  reducers: {\n    setAccount: (state, action) => {\n      state.account = action.payload;\n      console.log(state.contract);\n    },\n    setContract: (state, action) => {\n      state.contract = action.payload;\n    },\n    setProvider: (state, action) => {\n      state.provider = action.payload;\n    },\n    setNFTs: (state, action) => {\n      state.accNFTs = action.payload;\n    },\n    setListedNFTs: (state, action) => {\n      state.listedNFTs = action.payload;\n    }\n  }\n});\nexport const {\n  setAccount,\n  setContract,\n  setProvider,\n  setNFTs,\n  setListedNFTs\n} = accountsSlice.actions;\nexport default accountsSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","account","contract","provider","accNFTs","listedNFTs","accountsSlice","name","reducers","setAccount","state","action","payload","console","log","setContract","setProvider","setNFTs","setListedNFTs","actions","reducer"],"sources":["/Users/mehmetkelnebioglu/Desktop/untitled folder/src/Store/slicers/accounts.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  account: null,\n  contract: null,\n  provider: null,\n  accNFTs: null,\n  listedNFTs: []\n};\n\nexport const accountsSlice = createSlice({\n  name: \"accounts\",\n  initialState,\n  reducers: {\n    setAccount: (state, action) => {\n      state.account = action.payload;\n      console.log(state.contract);\n    },\n    setContract: (state, action) => {\n      state.contract = action.payload;\n    },\n    setProvider: (state, action) => {\n      state.provider = action.payload;\n    },\n    setNFTs: (state, action) => {\n      state.accNFTs = action.payload;\n    },\n    setListedNFTs: (state, action) => {\n      state.listedNFTs = action.payload;\n    },\n  },\n});\n\nexport const { setAccount, setContract, setProvider, setNFTs, setListedNFTs } = accountsSlice.actions;\nexport default accountsSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACnBC,OAAO,EAAE,IAAI;EACbC,QAAQ,EAAE,IAAI;EACdC,QAAQ,EAAE,IAAI;EACdC,OAAO,EAAE,IAAI;EACbC,UAAU,EAAE;AACd,CAAC;AAED,OAAO,MAAMC,aAAa,GAAGP,WAAW,CAAC;EACvCQ,IAAI,EAAE,UAAU;EAChBP,YAAY;EACZQ,QAAQ,EAAE;IACRC,UAAU,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC7BD,KAAK,CAACT,OAAO,GAAGU,MAAM,CAACC,OAAO;MAC9BC,OAAO,CAACC,GAAG,CAACJ,KAAK,CAACR,QAAQ,CAAC;IAC7B,CAAC;IACDa,WAAW,EAAE,CAACL,KAAK,EAAEC,MAAM,KAAK;MAC9BD,KAAK,CAACR,QAAQ,GAAGS,MAAM,CAACC,OAAO;IACjC,CAAC;IACDI,WAAW,EAAE,CAACN,KAAK,EAAEC,MAAM,KAAK;MAC9BD,KAAK,CAACP,QAAQ,GAAGQ,MAAM,CAACC,OAAO;IACjC,CAAC;IACDK,OAAO,EAAE,CAACP,KAAK,EAAEC,MAAM,KAAK;MAC1BD,KAAK,CAACN,OAAO,GAAGO,MAAM,CAACC,OAAO;IAChC,CAAC;IACDM,aAAa,EAAE,CAACR,KAAK,EAAEC,MAAM,KAAK;MAChCD,KAAK,CAACL,UAAU,GAAGM,MAAM,CAACC,OAAO;IACnC;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEH,UAAU;EAAEM,WAAW;EAAEC,WAAW;EAAEC,OAAO;EAAEC;AAAc,CAAC,GAAGZ,aAAa,CAACa,OAAO;AACrG,eAAeb,aAAa,CAACc,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}