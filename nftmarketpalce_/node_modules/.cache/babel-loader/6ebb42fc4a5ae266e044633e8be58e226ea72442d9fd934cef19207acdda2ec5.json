{"ast":null,"code":"import { ethers } from \"ethers\";\nimport { CONTRACT_ADDRESS } from \"./../Contract/Constant/Info\";\nimport { ABI, ABI2 } from \"./../Contract/Constant/Info\";\nexport const useContractFunctions = () => {\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\n  const signer = provider.getSigner();\n  const contract = new ethers.Contract(CONTRACT_ADDRESS, ABI, signer);\n  const startNFTSale = async (_contractAddress, _price, _tokenId) => {\n    const contract2 = new ethers.Contract(_contractAddress, ABI2, signer);\n    const sitution = await contract2.getApproved(_tokenId);\n    console.log(sitution === CONTRACT_ADDRESS.toString());\n    if (sitution === CONTRACT_ADDRESS.toString()) {\n      await contract.startNFTSale(_contractAddress, _price, _tokenId);\n    } else {\n      await contract2.approve(CONTRACT_ADDRESS.toString(), _tokenId);\n    }\n  };\n  const buyNFT = async (_id, _price) => {\n    console.log(_id, _price);\n    await contract.buyNFT(_id, {\n      value: Number(_price)\n    });\n  };\n  return {\n    startNFTSale,\n    buyNFT\n  };\n};","map":{"version":3,"names":["ethers","CONTRACT_ADDRESS","ABI","ABI2","useContractFunctions","provider","providers","Web3Provider","window","ethereum","signer","getSigner","contract","Contract","startNFTSale","_contractAddress","_price","_tokenId","contract2","sitution","getApproved","console","log","toString","approve","buyNFT","_id","value","Number"],"sources":["/Users/mehmetkelnebioglu/Desktop/untitled folder/src/Hooks/useContractFunctions.js"],"sourcesContent":["import { ethers } from \"ethers\";\nimport { CONTRACT_ADDRESS } from \"./../Contract/Constant/Info\";\nimport { ABI, ABI2 } from \"./../Contract/Constant/Info\";\n\nexport const useContractFunctions = () => {\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\n  const signer = provider.getSigner();\n  const contract = new ethers.Contract(CONTRACT_ADDRESS, ABI, signer);\n\n  const startNFTSale = async (_contractAddress, _price, _tokenId) => {\n    const contract2 = new ethers.Contract(_contractAddress, ABI2, signer);\n    const sitution = await contract2.getApproved(_tokenId);\n    console.log(sitution === CONTRACT_ADDRESS.toString());\n    if (sitution === CONTRACT_ADDRESS.toString()) {\n      await contract.startNFTSale(_contractAddress, _price, _tokenId);\n    } else {\n      await contract2.approve(CONTRACT_ADDRESS.toString(), _tokenId);\n    }\n  };\n  const buyNFT = async (_id, _price) => {\n    console.log(_id, _price);\n    await contract.buyNFT(_id, { value: Number(_price) });\n  };\n\n  return {\n    startNFTSale,\n    buyNFT,\n  };\n};\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,QAAQ;AAC/B,SAASC,gBAAgB,QAAQ,6BAA6B;AAC9D,SAASC,GAAG,EAAEC,IAAI,QAAQ,6BAA6B;AAEvD,OAAO,MAAMC,oBAAoB,GAAG,MAAM;EACxC,MAAMC,QAAQ,GAAG,IAAIL,MAAM,CAACM,SAAS,CAACC,YAAY,CAACC,MAAM,CAACC,QAAQ,CAAC;EACnE,MAAMC,MAAM,GAAGL,QAAQ,CAACM,SAAS,EAAE;EACnC,MAAMC,QAAQ,GAAG,IAAIZ,MAAM,CAACa,QAAQ,CAACZ,gBAAgB,EAAEC,GAAG,EAAEQ,MAAM,CAAC;EAEnE,MAAMI,YAAY,GAAG,OAAOC,gBAAgB,EAAEC,MAAM,EAAEC,QAAQ,KAAK;IACjE,MAAMC,SAAS,GAAG,IAAIlB,MAAM,CAACa,QAAQ,CAACE,gBAAgB,EAAEZ,IAAI,EAAEO,MAAM,CAAC;IACrE,MAAMS,QAAQ,GAAG,MAAMD,SAAS,CAACE,WAAW,CAACH,QAAQ,CAAC;IACtDI,OAAO,CAACC,GAAG,CAACH,QAAQ,KAAKlB,gBAAgB,CAACsB,QAAQ,EAAE,CAAC;IACrD,IAAIJ,QAAQ,KAAKlB,gBAAgB,CAACsB,QAAQ,EAAE,EAAE;MAC5C,MAAMX,QAAQ,CAACE,YAAY,CAACC,gBAAgB,EAAEC,MAAM,EAAEC,QAAQ,CAAC;IACjE,CAAC,MAAM;MACL,MAAMC,SAAS,CAACM,OAAO,CAACvB,gBAAgB,CAACsB,QAAQ,EAAE,EAAEN,QAAQ,CAAC;IAChE;EACF,CAAC;EACD,MAAMQ,MAAM,GAAG,OAAOC,GAAG,EAAEV,MAAM,KAAK;IACpCK,OAAO,CAACC,GAAG,CAACI,GAAG,EAAEV,MAAM,CAAC;IACxB,MAAMJ,QAAQ,CAACa,MAAM,CAACC,GAAG,EAAE;MAAEC,KAAK,EAAEC,MAAM,CAACZ,MAAM;IAAE,CAAC,CAAC;EACvD,CAAC;EAED,OAAO;IACLF,YAAY;IACZW;EACF,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}